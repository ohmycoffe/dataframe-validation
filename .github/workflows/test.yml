name: Test and lint

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
    paths:
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
      - "poetry.lock"
      - ".github/**"
      - "Makefile"
      - "tox.ini"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Run lint
        run: |
          make install
          make lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Run test
        run: |
          make install
          make test

  test-coverage-report:
    runs-on: ubuntu-latest
    name: Generate a test-coverage report
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Run tests and collect coverage
        run: |
          make install
          make test-cov
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
